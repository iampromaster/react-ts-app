{"version":3,"sources":["component/display.tsx","share/context.tsx","component/controls.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Display","count","className","defaultState","CounterContext","createContext","undefined","counterReducer","state","action","CounterProvider","children","useReducer","dispatch","Provider","value","Controls","handler","onClick","App","context","useContext","Error","useCounter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOACe,SAASA,EAAT,GAAkC,IAAfC,EAAc,EAAdA,MAChC,OACE,qBAAKC,UAAU,UAAf,SACGD,I,WCDDE,EAAe,CAAEF,MAAO,GAMxBG,EAAiBC,6BAErBC,GAEF,SAASC,EAAeC,EAAaC,GACnC,OAAOA,GACL,IAAK,YACH,MAAO,CACLR,MAAOO,EAAMP,MAAQ,GAEzB,IAAK,YACH,MAAO,CAAEA,MAAOO,EAAMP,MAAO,IAK5B,SAASS,EAAT,GAA6D,IAAlCC,EAAiC,EAAjCA,SAChC,EAA0BC,qBAAWL,EAAgBJ,GAArD,mBAAOK,EAAP,KAAcK,EAAd,KAEA,OACE,cAACT,EAAeU,SAAhB,CAAyBC,MAAO,CAACP,QAAMK,YAAvC,SACGF,IC7BQ,SAASK,EAAT,GAAmD,IAA/BC,EAA8B,EAA9BA,QACjC,OACE,sBAAKf,UAAU,WAAf,UACE,wBAAQA,UAAU,UAAUgB,QAAS,WAAOD,EAAQ,cAApD,eACA,wBAAQf,UAAU,UAAUgB,QAAS,WAAOD,EAAQ,cAApD,kBCWSE,MAVf,WACE,MF6BK,WACL,IAAMC,EAAUC,qBAAWjB,GAE3B,IAAKgB,EAAS,MAAM,IAAIE,MAAM,mDAC9B,OAAOF,EEjCqBG,GAApBf,EAAR,EAAQA,MAAOK,EAAf,EAAeA,SACf,OACA,qCACE,cAACb,EAAD,eAAaQ,IACb,cAACQ,EAAD,CAAUC,QAASJ,QCGRW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACzB,EAAD,UACE,cAAC,EAAD,QAGJ0B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e49c1c9e.chunk.js","sourcesContent":["import type { State } from '../share/context'\nexport default function Display({ count}: State){\n  return (\n    <div className=\"display\">\n      {count}\n    </div>\n  )\n}","import type {ReactNode} from 'react'\nimport { createContext,useReducer,useContext } from \"react\"\n\nconst defaultState = { count: 0}\n\nexport type Action = 'increment' | 'decrement'\nexport type Dispatch = (action:Action) => void\nexport type State = typeof defaultState\n\nconst CounterContext = createContext<\n  { state:State,dispatch:Dispatch} | undefined\n>(undefined)\n\nfunction counterReducer(state:State, action: Action){\n  switch(action){\n    case 'increment':\n      return {\n        count: state.count + 1\n      }\n    case 'decrement': {\n      return { count: state.count -1 }\n    }\n  }\n}\n\nexport function CounterProvider({ children }: {children:ReactNode}){\n  const [state, dispatch] = useReducer(counterReducer, defaultState)\n\n  return (\n    <CounterContext.Provider value={{state,dispatch}}>\n      {children}\n    </CounterContext.Provider>\n  )\n\n}\n\nexport function useCounter(){\n  const context = useContext(CounterContext)\n\n  if (!context) throw new Error('useCounter must be used inside a CounterContext')\n  return context\n}","import type { Dispatch } from \"../share/context\"\nexport default function Controls({ handler}: {handler: Dispatch}){\n  return (\n    <div className=\"controls\">\n      <button className=\"counter\" onClick={() => {handler('increment')}}>+</button>\n      <button className=\"counter\" onClick={() => {handler('decrement')}}>-</button>\n    </div>\n  )\n}","import React from 'react';\nimport './App.css';\nimport Display from './component/display';\nimport { useCounter } from './share/context'\nimport Controls from './component/controls';\n\nfunction App() {\n  const { state, dispatch } = useCounter()\n  return (\n  <>\n    <Display {...state} />\n    <Controls handler={dispatch} />\n  </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CounterProvider } from './share/context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CounterProvider>\n      <App />\n    </CounterProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}